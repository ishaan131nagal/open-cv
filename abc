

import cv2 as cv
import numpy as np

def find_yellow_spots(image):
    hsv_image = cv.cvtColor(image, cv.COLOR_BGR2HSV)
    lower_yellow = np.array([15, 100, 100])
    upper_yellow = np.array([45, 255, 255])
    gray = cv.cvtColor(image, cv.COLOR_BGR2GRAY)
    adaptive_thresh = cv.adaptiveThreshold(gray, 255, cv.ADAPTIVE_THRESH_MEAN_C, cv.THRESH_BINARY, 11, 2)
    mask = cv.bitwise_and(adaptive_thresh, cv.inRange(hsv_image, lower_yellow, upper_yellow))
    contours, hierarchy = cv.findContours(mask, cv.RETR_EXTERNAL, cv.CHAIN_APPROX_SIMPLE)
    min_contour_area = -100  # Adjust as needed
    image_height = image.shape[0]
    second_half_height = image_height // 2
    filtered_contours = [contour for contour in contours if
                         cv.contourArea(contour) > min_contour_area and cv.boundingRect(contour)[
                             1] >= second_half_height]
    return filtered_contours

def add_markings(image, contours):
    output_image = image.copy()
    cv.drawContours(output_image, contours, -1, (0, 255, 0), 2)
    return output_image

if __name__ == "__main__":
    image = cv.imread("eye.jpg")
    contours = find_yellow_spots(image)
    output_image = add_markings(image, contours)
    cv.imshow("Image with yellow spots marked", output_image)
    cv.waitKey(0)
    cv.destroyAllWindows()
